{
  "src": {
    "app": {
      "components": {
        "mis-turnos": {
          "mis-turnos.component.css": "* {\r\n    margin: 0;\r\n}",
          "mis-turnos.component.html": "<div @slideIn class=\"px-5 py-5 card flex flex-wrap gap-3\">\r\n    <div class=\"w-full\">\r\n        <p-toolbar>\r\n            <div class=\"w-12 flex flex-wrap justify-content-center\">\r\n                <div class=\"w-2\">\r\n                    <p-button (onClick)=\"changeFilter('especialidad')\" label=\"Especialidad\" [text]=\"true\" [raised]=\"true\"\r\n                        severity=\"warning\" />\r\n                </div>\r\n                @if (role == 'paciente')\r\n                {\r\n    \r\n                    <div class=\"w-2\">\r\n                        <p-button (onClick)=\"changeFilter('especialista')\" label=\"Especialista\" [text]=\"true\" [raised]=\"true\"\r\n                            severity=\"info\" />\r\n                    </div>\r\n                }\r\n                @else {\r\n                    <div class=\"w-2\">\r\n                        <p-button (onClick)=\"changeFilter('paciente')\" label=\"Paciente\" [text]=\"true\" [raised]=\"true\"\r\n                            severity=\"info\" />\r\n                    </div>\r\n                }\r\n                <div class=\"w-2\">\r\n                    <p-button (onClick)=\"changeFilter('fecha')\" label=\"Fecha\" [text]=\"true\" [raised]=\"true\"\r\n                        severity=\"success\" />\r\n                </div>\r\n                <div class=\"w-2\">\r\n                    <p-button (onClick)=\"changeFilter('estado')\" label=\"Estado\" [text]=\"true\" [raised]=\"true\"\r\n                        severity=\"success\" />\r\n                </div>\r\n                @for (filter of historiaFijaFilters; track $index) {\r\n                    <div class=\"w-2\">\r\n                        <p-button (onClick)=\"changeFilterCampoInterno('historiaClinica', filter, false)\" [label]=\"filter\" [text]=\"true\" [raised]=\"true\"\r\n                            severity=\"help\" />\r\n                    </div>\r\n                }\r\n\r\n                @for (filter of getHistoriaDinamicoFilters(); track $index) {\r\n                    <div class=\"w-2\">\r\n                        <p-button (onClick)=\"changeFilterCampoInterno('historiaClinica', filter, true)\" [label]=\"filter\" [text]=\"true\" [raised]=\"true\"\r\n                            severity=\"help\" />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n            <div class=\"w-12\">\r\n                <p-inputGroup>\r\n                    <input [(ngModel)]=\"query\" type=\"text\" pInputText [placeholder]=\"getSearchingString()\" />\r\n                    <button disabled type=\"button\" pButton icon=\"pi pi-search\"></button>\r\n                </p-inputGroup>\r\n            </div>\r\n    </p-toolbar>\r\n    </div>\r\n    @for (turno of getFilteredTurnos(); track $index) {\r\n        <p-card [header]=\"getNombre(turno)\" [subheader]=\"turno.estado\" [style]=\"{ width: '360px' }\">\r\n            <ng-template pTemplate=\"header\">\r\n                <img [src]=\"getImg(turno)\" alt=\"imagen perfil\">\r\n            </ng-template>\r\n            <p></p>\r\n            <p>{{turno.especialidad}}</p>\r\n            <p>{{turno.fecha | dateDisplay}}</p>\r\n            <ng-template pTemplate=\"footer\">\r\n                <div class=\"flex gap-2 mt-1\">\r\n                    @if(puedeCancelar(turno))\r\n                    {\r\n                        <p-button (onClick)=\"cancelar(turno)\" label=\"Cancelar\" severity=\"secondary\" class=\"w-full\" styleClass=\"w-full\" />\r\n                    }\r\n                    @if(puedeVerComentario(turno))\r\n                    {\r\n                        <p-button (onClick)=\"verReview(turno)\" label=\"Ver Reseña\" severity=\"secondary\" class=\"w-full\" styleClass=\"w-full\" />\r\n                    }\r\n                    @if(puedeCompletarEncuesta(turno)) {\r\n                        <p-button (onClick)=\"mostrarEncuesta(turno)\" label=\"Encuesta\" class=\"w-full\" styleClass=\"w-full\" />\r\n                    }\r\n                    @if(puedeCalificarAtencion(turno)) {\r\n                        <p-button (onClick)=\"dejarReview(turno)\" label=\"Calificar\" class=\"w-full\" styleClass=\"w-full\" />\r\n                    }\r\n                    @if(puedeRechazar(turno)) {\r\n                        <p-button (onClick)=\"rechazar(turno)\" label=\"Rechazar\" severity=\"secondary\" class=\"w-full\" styleClass=\"w-full\" />\r\n                    }\r\n\r\n                    @if(puedeAceptar(turno)) {\r\n                        <p-button (onClick)=\"aceptar(turno)\" label=\"Aceptar\" class=\"w-full\" styleClass=\"w-full\" />\r\n                    }\r\n\r\n                    @if(puedeFinalizar(turno)) {\r\n                        <p-button (onClick)=\"finalizar(turno)\" label=\"Finalizar\" class=\"w-full\" styleClass=\"w-full\" />\r\n                    }\r\n\r\n                    @if(puedeDejarHistoriaClinica(turno)) {\r\n                        <p-button (onClick)=\"dejarHistoriaClinica(turno)\" label=\"Dejar Historia\" class=\"w-full\" styleClass=\"w-full\" />\r\n                    }\r\n                </div>\r\n            </ng-template>\r\n        </p-card>\r\n    }\r\n</div>\r\n\r\n<p-dialog \r\n        [header]=\"'Comentario para ' + motivoComentario\" \r\n        [modal]=\"true\" \r\n        [(visible)]=\"visibleComentario\" \r\n        [style]=\"{ width: '50rem' }\" \r\n        [breakpoints]=\"{ '1199px': '75vw', '575px': '90vw' }\" >\r\n        <div class=\"flex flex-column align-items-center gap-5\">\r\n            <input placeholder=\"Comentario\" type=\"text\" pInputText [(ngModel)]=\"nuevoComentario\"  class=\"w-full\"/>\r\n            <p-button [disabled]=\"puedeConfirmar()\" (onClick)=\"confirmarComentario()\" label=\"Confirmar\" />\r\n        </div>\r\n</p-dialog>\r\n\r\n<p-dialog \r\n        header=\"Reseña\"\r\n        [modal]=\"true\" \r\n        [(visible)]=\"visibleReview\" \r\n        [style]=\"{ width: '50rem' }\" \r\n        [breakpoints]=\"{ '1199px': '75vw', '575px': '90vw' }\" >\r\n        <div class=\"flex flex-column gap-5\">\r\n            @if (turnoAModificar?.comentario) {\r\n                <div>\r\n                    <h3>Comentario</h3>\r\n                    <p>\r\n                        {{ turnoAModificar?.comentario }}\r\n                    </p>\r\n                </div>\r\n            }\r\n            <hr>\r\n            @if (turnoAModificar?.review) {\r\n                <h3>Encuesta de Atención</h3>\r\n                @for (pregunta of turnoAModificar!.review; track $index) {\r\n                    <div>\r\n                        <h4>{{ pregunta.pregunta }}</h4>\r\n                        <p>\r\n                            <!-- Si la respuesta es booleana, mostrar \"Sí\" o \"No\" -->\r\n                            {{ pregunta.respuesta === true ? 'Sí' : (pregunta.respuesta === false ? 'No' : pregunta.respuesta) }}\r\n                        </p>\r\n                    </div>\r\n                }\r\n            }\r\n\r\n        </div>\r\n</p-dialog>\r\n\r\n\r\n<p-dialog \r\n        header=\"Completa esta encuesta\" \r\n        [modal]=\"true\" \r\n        [(visible)]=\"visibleEncuesta\" \r\n        [style]=\"{ width: '50rem' }\" \r\n        [breakpoints]=\"{ '1199px': '75vw', '575px': '90vw' }\" >\r\n        <div class=\"flex flex-column align-items-center gap-5\">\r\n            @for (pregunta of encuesta; track $index) {\r\n                <div class=\"w-full\">\r\n                    <h4 class=\"py-2\"> {{ pregunta.pregunta }}</h4>\r\n                    <input placeholder=\"Respuesta\" type=\"text\" pInputText [(ngModel)]=\"pregunta.respuesta\"  class=\"w-full\"/>\r\n                </div>\r\n\r\n            }\r\n            <p-button [disabled]=\"puedeEnviarEncuesta()\" (onClick)=\"enviarEncuesta()\" label=\"Confirmar\" />\r\n        </div>\r\n</p-dialog>\r\n\r\n\r\n<p-dialog \r\n        header=\"Historia Clinica\" \r\n        [modal]=\"true\" \r\n        [(visible)]=\"visibleHistoria\" \r\n        [style]=\"{ width: '50rem' }\" \r\n        [breakpoints]=\"{ '1199px': '75vw', '575px': '90vw' }\" >\r\n        @if (visibleHistoria) {\r\n            <app-form-historia-clinica (onSubmit)=\"enviarHistoriaClinica($event)\"></app-form-historia-clinica>\r\n        }\r\n</p-dialog>\r\n\r\n<p-dialog \r\n    header=\"Atención - Completa la encuesta\" \r\n    [modal]=\"true\" \r\n    [(visible)]=\"visibleEncuestaAtencion\" \r\n    [style]=\"{ width: '50rem' }\" \r\n    [breakpoints]=\"{ '1199px': '75vw', '575px': '90vw' }\" >\r\n    \r\n    <div class=\"flex flex-column align-items-center gap-5\">\r\n        <div class=\"w-full\">\r\n            @for (pregunta of encuestaAtencion; track $index) {\r\n                \r\n                <h4 class=\"py-2\">{{ pregunta.pregunta }}</h4>\r\n    \r\n                @if ($index === 0) {\r\n    \r\n                    <textarea placeholder=\"Escribe tu respuesta...\" pInputTextarea [(ngModel)]=\"pregunta.respuesta\" class=\"w-full\"></textarea>\r\n                }\r\n                @else if ($index === 1) {\r\n                    <p-rating [(ngModel)]=\"pregunta.respuesta\" stars=\"5\" cancel=\"false\"></p-rating>\r\n                }\r\n                @else if ($index === 2) {\r\n                    <div>\r\n                        <div class=\"field-radiobutton\">\r\n                            <p-radioButton name=\"recomendar{{$index}}\" value=\"Sí\" [(ngModel)]=\"pregunta.respuesta\" label=\"Sí\"></p-radioButton>\r\n                        </div>\r\n                        <div class=\"field-radiobutton\">\r\n                            <p-radioButton name=\"recomendar{{$index}}\" value=\"No\" [(ngModel)]=\"pregunta.respuesta\" label=\"No\"></p-radioButton>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                @else if ($index === 3) {\r\n                    <div>\r\n                        @for (opcion of ['Rapidez', 'Atención', 'Calidad']; track $index) {\r\n                            <div class=\"field-checkbox\">\r\n                                <p-checkbox name=\"aspectos{{$index}}\" [value]=\"opcion\" [(ngModel)]=\"pregunta.respuesta\" label=\"{{ opcion }}\"></p-checkbox>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n                @else if ($index === 4) {\r\n    \r\n                    <div>\r\n                        <p-slider [(ngModel)]=\"pregunta.respuesta\" [min]=\"1\" [max]=\"10\"></p-slider>\r\n                        <p>Nivel: {{pregunta.respuesta}}</p>\r\n                    </div>\r\n                }\r\n            }\r\n        </div>\r\n\r\n        <!-- Botón de Confirmar -->\r\n        <p-button [disabled]=\"puedeEnviarEncuestaAtencion()\" (onClick)=\"enviarEncuestaAtencion()\" label=\"Confirmar\" />\r\n    </div>\r\n</p-dialog>\r\n",
          "mis-turnos.component.ts": "import { Component, inject } from '@angular/core';\r\nimport { CardModule } from 'primeng/card';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { TurnoService } from '../../services/turno.service';\r\nimport { ITurno } from '../../interfaces/turno.interface';\r\nimport { DateDisplayPipe } from '../../pipes/date-display.pipe';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { IPregunta } from '../../interfaces/encuesta.interface';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { InputGroupModule } from 'primeng/inputgroup';\r\nimport { FormHistoriaClinicaComponent } from '../form-historia-clinica/form-historia-clinica.component';\r\nimport { IHistoriaClinica } from '../../interfaces/historia_clinica.interface';\r\nimport { slideInAnimation } from '../../animations/animations';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { RatingModule } from 'primeng/rating';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\n\r\n@Component({\r\n  selector: 'app-mis-turnos',\r\n  standalone: true,\r\n  imports: [\r\n    CardModule,\r\n    ButtonModule,\r\n    DateDisplayPipe,\r\n    DialogModule,\r\n    FormsModule,\r\n    InputTextModule,\r\n    ToolbarModule,\r\n    InputGroupModule,\r\n    SliderModule,\r\n    CheckboxModule,\r\n    FormHistoriaClinicaComponent,\r\n    InputTextModule,\r\n    InputTextareaModule,\r\n    RatingModule,\r\n    RadioButtonModule\r\n  ],\r\n  templateUrl: './mis-turnos.component.html',\r\n  styleUrl: './mis-turnos.component.css',\r\n  animations: [\r\n    slideInAnimation,\r\n  ]\r\n})\r\nexport class MisTurnosComponent {\r\n  authService = inject(AuthService);\r\n  turnoService = inject(TurnoService);\r\n  _dateDisplay = inject(DateDisplayPipe);\r\n  role!: string;\r\n  turnos: ITurno[] = []\r\n  visibleComentario = false;\r\n  visibleReview = false;\r\n  visibleEncuesta = false;\r\n  visibleHistoria = false;\r\n  motivoComentario = '';\r\n  nuevoEstado = '';\r\n  nuevoComentario = '';\r\n  turnoAModificar: ITurno | null = null;\r\n  query = '';\r\n  filterBy = 'especialidad';\r\n  datosDinamicos = false;\r\n  campoAdicional = '';\r\n\r\n  historiaFijaFilters = ['altura', 'temperatura', 'peso', 'presion'];\r\n\r\n\r\n\r\n  encuesta: IPregunta[] = [\r\n    {\r\n      pregunta: '¿Como fue la atencion del especialista?',\r\n      respuesta: ''\r\n    },\r\n    {\r\n      pregunta: '¿La atencion de la administracion fue buena?',\r\n      respuesta: ''\r\n    },\r\n    {\r\n      pregunta: '¿Hay algo que mejorarias de la clinica?',\r\n      respuesta: ''\r\n    },\r\n\r\n  ];\r\n\r\n  encuestaAtencion: IPregunta[] = [\r\n    {\r\n      pregunta: 'Por favor, deja un comentario adicional:',\r\n      respuesta: ''\r\n    },\r\n    {\r\n      pregunta: '¿Cómo calificarías el servicio con estrellas?',\r\n      respuesta: 0\r\n    },\r\n    {\r\n      pregunta: '¿Recomendarías este servicio?',\r\n      respuesta: ''\r\n    },\r\n    {\r\n      pregunta: '¿Qué aspectos te gustaron del servicio? (Marque todos los que aplican)',\r\n      respuesta: []\r\n    },\r\n    {\r\n      pregunta: 'Nivel de satisfacción general (1-10):',\r\n      respuesta: 5\r\n    }\r\n  ];\r\n\r\n  visibleEncuestaAtencion = false;\r\n\r\n\r\n  constructor() {\r\n    const user = this.authService.currentUserSignal()!\r\n    this.role = user.role;\r\n    this.turnoService.getTurnosRoleUid(this.role, user.uid)\r\n      .subscribe(\r\n        {\r\n          next: (turnos) => {\r\n            this.turnos = turnos;\r\n          },\r\n          error: (err) => {\r\n            console.log(err);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  changeFilter(newFilter: string) {\r\n    this.filterBy = newFilter;\r\n  }\r\n\r\n  changeFilterCampoInterno(newFilter: string, campoAdicional : string, datosDinamicos : boolean) {\r\n    this.filterBy = newFilter;\r\n    this.datosDinamicos = datosDinamicos;\r\n    this.campoAdicional = campoAdicional;\r\n  }\r\n\r\n  getFilteredTurnos(): ITurno[] {\r\n    if(this.query.length == 0) return this.turnos;\r\n\r\n    if (this.filterBy == 'paciente' || this.filterBy == 'especialista') {\r\n      return this.turnos.filter((turno) => {\r\n        let nombreCompleto: string = `${turno[this.filterBy].nombre} ${turno[this.filterBy].apellido}`;\r\n        nombreCompleto = nombreCompleto.toLowerCase();\r\n        return nombreCompleto.includes(this.query.toLowerCase())\r\n      });\r\n    }\r\n    if(this.filterBy == 'historiaClinica') {\r\n      return this.turnos.filter((turno) => {\r\n        if(!turno.historiaClinica) return false;\r\n\r\n        if(this.datosDinamicos) {\r\n          for(let datoDinamico of turno.historiaClinica.datosDinamicos)\r\n          {\r\n            if (datoDinamico.clave == this.campoAdicional)\r\n            {\r\n              let valor: string = `${datoDinamico.valor}`;\r\n              valor = valor.toLowerCase();\r\n              return valor.includes(this.query.toLowerCase());\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n        else {\r\n          let valor: string = `${turno.historiaClinica[this.campoAdicional]}`;\r\n          valor = valor.toLowerCase();\r\n          return valor.includes(this.query.toLowerCase());\r\n        }\r\n      });\r\n    }\r\n    else if (this.filterBy == 'fecha') {\r\n      return this.turnos.filter((turno) => {\r\n        let fechaStr = this._dateDisplay.transform(turno.fecha);\r\n        return fechaStr.toLowerCase().includes(this.query.toLowerCase())\r\n      });\r\n    }\r\n    return this.turnos.filter((turno) => turno[this.filterBy].toLowerCase().includes(this.query.toLowerCase()));\r\n  }\r\n\r\n  getHistoriaDinamicoFilters() : string[] {\r\n    const filters : string[] = [];\r\n\r\n    for(let turno of this.turnos) {\r\n      if(turno.historiaClinica)\r\n      {\r\n        for(let datoDinamico of turno.historiaClinica.datosDinamicos){\r\n          if(!filters.includes(datoDinamico.clave)) {\r\n            filters.push(datoDinamico.clave);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return filters;\r\n  }\r\n\r\n  getNombre(turno: ITurno): string {\r\n    if (this.role == 'paciente') {\r\n      return `${turno.especialista.nombre} ${turno.especialista.apellido}`\r\n    }\r\n\r\n    return `${turno.paciente.nombre} ${turno.paciente.apellido}`\r\n  }\r\n\r\n  getImg(turno: ITurno): string {\r\n    if (this.role == 'paciente') {\r\n      return turno.especialista.imagenPerfil\r\n    }\r\n\r\n    return turno.paciente.imagenPerfil\r\n  }\r\n\r\n  puedeCancelar(turno: ITurno): boolean {\r\n    if (this.role == 'paciente') {\r\n      return turno.estado != 'realizado' && turno.estado != 'cancelado' && turno.estado != 'rechazado';\r\n    }\r\n    else {\r\n      return turno.estado != 'aceptado' && turno.estado != 'realizado' && turno.estado != 'rechazado' && turno.estado != 'cancelado';\r\n    }\r\n  }\r\n\r\n  puedeVerComentario(turno: ITurno): boolean {\r\n    if (turno.comentario || turno.review)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  puedeCompletarEncuesta(turno: ITurno): boolean {\r\n    if (this.role == 'paciente' && turno.estado == 'realizado' && turno.comentario && !turno.encuesta) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  puedeCalificarAtencion(turno: ITurno): boolean {\r\n    if (this.role == 'paciente' && turno.estado == 'realizado' && !turno.review)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  puedeRechazar(turno: ITurno): boolean {\r\n    if (this.role == 'especialista' && turno.estado == 'pendiente')\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  puedeAceptar(turno: ITurno): boolean {\r\n    if (this.role == 'especialista' && turno.estado == 'pendiente')\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  puedeFinalizar(turno: ITurno): boolean {\r\n    if (this.role == 'especialista' && turno.estado == 'aceptado')\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  puedeDejarHistoriaClinica(turno: ITurno) {\r\n    if (this.role == 'especialista' && turno.estado == 'realizado' && !turno.historiaClinica)\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n  cancelar(turno: ITurno) {\r\n    this.nuevoEstado = 'cancelado';\r\n    this.motivoComentario = 'cancelar';\r\n    this.turnoAModificar = turno;\r\n    this.visibleComentario = true;\r\n  }\r\n\r\n  rechazar(turno: ITurno) {\r\n    this.nuevoEstado = 'rechazado';\r\n    this.motivoComentario = 'rechazar';\r\n    this.turnoAModificar = turno;\r\n    this.visibleComentario = true;\r\n  }\r\n\r\n  aceptar(turno: ITurno) {\r\n    this.turnoAModificar = turno;\r\n    this.turnoService.update(\r\n      this.turnoAModificar!,\r\n      {\r\n        estado: 'aceptado',\r\n      }\r\n    )\r\n      .then(\r\n        () => {\r\n\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  finalizar(turno: ITurno) {\r\n    this.nuevoEstado = 'realizado';\r\n    this.motivoComentario = 'finalizar';\r\n    this.turnoAModificar = turno;\r\n    this.visibleComentario = true;\r\n  }\r\n\r\n  dejarHistoriaClinica(turno: ITurno) {\r\n    this.nuevoEstado = 'realizado';\r\n    this.motivoComentario = 'finalizar';\r\n    this.turnoAModificar = turno;\r\n    this.visibleHistoria = true;\r\n  }\r\n\r\n  verReview(turno: ITurno) {\r\n    this.turnoAModificar = turno;\r\n    this.visibleReview = true;\r\n  }\r\n\r\n  dejarReview(turno: ITurno) {\r\n    this.turnoAModificar = turno;\r\n    this.visibleEncuestaAtencion = true;\r\n  }\r\n\r\n  mostrarEncuesta(turno: ITurno) {\r\n    this.turnoAModificar = turno;\r\n    this.visibleEncuesta = true;\r\n  }\r\n\r\n  confirmarComentario() {\r\n    this.turnoAModificar\r\n    this.turnoService.update(\r\n      this.turnoAModificar!,\r\n      {\r\n        estado: this.nuevoEstado,\r\n        comentario: this.nuevoComentario,\r\n      }\r\n    )\r\n      .then(\r\n        () => {\r\n\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    this.visibleComentario = false;\r\n    this.nuevoComentario = '';\r\n  }\r\n\r\n  confirmarReview() {\r\n    this.turnoAModificar\r\n    this.turnoService.update(\r\n      this.turnoAModificar!,\r\n      {\r\n        review: this.nuevoComentario,\r\n      }\r\n    )\r\n      .then(\r\n        () => {\r\n\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    this.visibleEncuestaAtencion = false;\r\n    this.nuevoComentario = '';\r\n  }\r\n\r\n  puedeConfirmar() {\r\n    return this.nuevoComentario.length < 1;\r\n  }\r\n\r\n  clearEncuesta() {\r\n    for (let pregunta of this.encuesta) {\r\n      pregunta.respuesta = '';\r\n    }\r\n  }\r\n\r\n  puedeEnviarEncuesta() {\r\n    for (let pregunta of this.encuesta) {\r\n      if (pregunta.respuesta.length < 1)\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  enviarEncuesta() {\r\n    this.turnoAModificar\r\n    this.turnoService.update(\r\n      this.turnoAModificar!,\r\n      {\r\n        encuesta: this.encuesta,\r\n      }\r\n    )\r\n      .then(\r\n        () => {\r\n\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n    );\r\n    this.visibleEncuesta = false;\r\n    this.clearEncuesta();\r\n  }\r\n\r\n  enviarHistoriaClinica(historiaClinica: IHistoriaClinica) {\r\n    this.turnoAModificar\r\n    this.turnoService.update(\r\n      this.turnoAModificar!,\r\n      {\r\n        historiaClinica: historiaClinica,\r\n      }\r\n    )\r\n      .then(\r\n        () => {\r\n\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n    );\r\n    this.visibleHistoria = false;\r\n  }\r\n\r\n  getSearchingString() : string {\r\n    let str = 'Buscando por ' + this.filterBy;\r\n    if(this.filterBy == 'historiaClinica') {\r\n      str += ': ' + this.campoAdicional;\r\n    }\r\n    return str;\r\n  }\r\n  \r\n  puedeEnviarEncuestaAtencion() {\r\n    return this.encuestaAtencion.some((pregunta, index) => {\r\n      if (index === 0 || index === 2) { // Pregunta de comentario adicional y recomendación\r\n        return !pregunta.respuesta || pregunta.respuesta.trim().length === 0;\r\n      } else if (index === 1) { // Pregunta de calificación con estrellas\r\n        return pregunta.respuesta === 0;\r\n      } else if (index === 4) { // Pregunta de nivel de satisfacción (rango)\r\n        return pregunta.respuesta < 1 || pregunta.respuesta > 10;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  enviarEncuestaAtencion() {\r\n    this.turnoService.update(\r\n      this.turnoAModificar!,\r\n      {\r\n        review: this.encuestaAtencion\r\n      }\r\n    )\r\n    .then(() => {\r\n      // Manejar éxito\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n    this.visibleEncuestaAtencion = false;\r\n\r\n    // Limpiar los campos después de enviar\r\n    this.encuestaAtencion.forEach((pregunta, index) => {\r\n      if (index === 0 || index === 2) { // Pregunta de comentario adicional y recomendación\r\n        pregunta.respuesta = '';\r\n      } else if (index === 1 || index === 4) { // Pregunta de estrellas y nivel de satisfacción\r\n        pregunta.respuesta = 0;\r\n      } else if (index === 3) { // Pregunta de checkbox\r\n        pregunta.respuesta = [];\r\n      }\r\n    });\r\n  }\r\n}\r\n"
        }
      }
    }
  }
}